<UserControl x:Class="Hurricane.Views.WindowSkins.WindowAdvancedView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:viewmodels="clr-namespace:Hurricane.ViewModels"
             xmlns:converter="clr-namespace:Hurricane.Extensions.Converter"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:wpfsvl="clr-namespace:WPFSoundVisualizationLib;assembly=WPFSoundVisualizationLib"
             xmlns:views="clr-namespace:Hurricane.Views"
             xmlns:jas="clr-namespace:Hurricane.Resources.Styles.DragDropListView.ServiceProviders.UI"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="850" DataContext="{x:Static viewmodels:MainViewModel.Instance}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/AdvancedTimelineSlider.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/RoundButtons.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/TextBlockStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converter:FormatTimespan x:Key="FormatTimespan"/>
            <converter:BitmapToBitmapImageConverter x:Key="BitmapToBitmapImageConverter"/>
            <converter:FalseOnEmptyString x:Key="FalseOnEmptyString"/>
            <converter:CollapsedOnNullValue x:Key="CollapsedOnNullValue"/>
            <Style TargetType="TextBlock" x:Key="AristTextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.CurrentTrack.Artist,Converter={StaticResource FalseOnEmptyString}}" Value="False">
                        <Setter Property="Text" Value="{DynamicResource noartist}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.CurrentTrack.Artist,Converter={StaticResource FalseOnEmptyString}}" Value="True">
                        <Setter Property="Text" Value="{Binding MusicManager.CSCoreEngine.CurrentTrack.Artist}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid MouseLeftButtonDown="Grid_MouseLeftButtonDown" MouseLeftButtonUp="Grid_MouseLeftButtonUp" Background="White">
            <TextBlock Text="Hurricane" Foreground="#FFAAAAAA" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20,0,0,0"/>
        </Grid>
        <TabControl Grid.Row="1">
            <TabItem Header="{DynamicResource playlists}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="230"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid Grid.ColumnSpan="5" Margin="0,0,10,0">
                        <Menu Width="500" HorizontalAlignment="Left">
                            <MenuItem Header="{DynamicResource playlist}">
                                <MenuItem Header="{DynamicResource removeplaylist}" Command="{Binding RemovePlaylist}"/>
                                <MenuItem Header="{DynamicResource renameplaylist}" Command="{Binding RenamePlaylist}"/>
                                <Separator />
                                <MenuItem Header="{DynamicResource newplaylist}" Command="{Binding AddNewPlaylist}"/>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource tracks}">
                                <MenuItem Header="{DynamicResource addfiles}" Command="{Binding AddFilesToPlaylist}"/>
                                <MenuItem Header="{DynamicResource adddirectories}" Command="{Binding AddFolderToPlaylist}"/>
                                <Separator />
                                <MenuItem Header="{DynamicResource reloadtrackinfo}" Command="{Binding ReloadTrackInformations}"/>
                                <MenuItem Header="{DynamicResource removetracks}">
                                    <MenuItem Header="{DynamicResource removemissingtracks}" Command="{Binding RemoveMissingTracks}" IsEnabled="{Binding MusicManager.SelectedPlaylist.ContainsMissingTracks}"/>
                                    <MenuItem Header="{DynamicResource removeduplicates}" Command="{Binding RemoveDuplicateTracks}"/>
                                    <Separator />
                                    <MenuItem Header="{DynamicResource removealltracks}" Command="{Binding ClearSelectedPlaylist}"/>
                                </MenuItem>
                            </MenuItem>
                        </Menu>
                        <TextBox x:Name="txtSearch" VerticalAlignment="Center" controls:TextBoxHelper.ClearTextButton="True" HorizontalAlignment="Right" Width="200" controls:TextBoxHelper.Watermark="{StaticResource search}" Text="{Binding MusicManager.SearchText,UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                    <ListBox Grid.Row="1" ItemsSource="{Binding MusicManager.Playlists}" DisplayMemberPath="Name" SelectedItem="{Binding MusicManager.SelectedPlaylist}" Margin="5" SelectionChanged="ListBox_SelectionChanged">
                        <ListBox.InputBindings>
                            <KeyBinding Key="Delete" Command="{Binding RemovePlaylist}"/>
                        </ListBox.InputBindings>
                        <ListBox.Resources>
                            <ContextMenu x:Key="contexmenu">
                                <MenuItem Header="{DynamicResource removeplaylist}" Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=DataContext.RemovePlaylist}"/>
                                <MenuItem Header="{DynamicResource renameplaylist}" Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=DataContext.RenamePlaylist}"/>
                            </ContextMenu>
                        </ListBox.Resources>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource MetroListBoxItem}">
                                <Setter Property="ContextMenu" Value="{StaticResource contexmenu}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                    <Rectangle Grid.Column="1" Width="1" Fill="Gray" Grid.Row="1"/>
                    <Grid Grid.Column="2" Margin="5" x:Name="gridplaylist" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <!--
                        <StackPanel Orientation="Horizontal" Margin="10,5,5,5">
                            <TextBlock Text="{Binding MusicManager.SelectedPlaylist.TrackCollection.Count}" FontWeight="Bold"/>
                            <TextBlock Text="{DynamicResource tracks}" FontWeight="Bold" Margin="5,0,0,0"/>
                        </StackPanel> -->
                        <ListView Grid.Row="1" ItemsSource="{Binding MusicManager.SelectedPlaylist.ViewSource}" SelectedItem="{Binding MusicManager.SelectedTrack}" BorderThickness="0" Margin="5,0,5,0" SelectionChanged="ListView_SelectionChanged"
                                  DragEnter="ListView_DragEnter" Drop="ListView_Drop" x:Name="listview">
                            <ListView.Resources>
                                <ContextMenu x:Key="ItemContextMenu" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext}">
                                    <MenuItem Header="{DynamicResource play}" Command="{Binding MusicManager.Commands.PlaySelectedTrack}" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" InputGestureText="Enter"/>
                                    <Separator />
                                    <MenuItem Header="{DynamicResource addtracks}">
                                        <MenuItem Header="{DynamicResource addfiles}" Command="{Binding AddFilesToPlaylist}" InputGestureText="{DynamicResource ins}"/>
                                        <MenuItem Header="{DynamicResource adddirectories}" Command="{Binding AddFolderToPlaylist}" InputGestureText="{DynamicResource strgins}"/>
                                    </MenuItem>
                                    <Separator />
                                    <MenuItem Header="{DynamicResource queue}">
                                        <MenuItem Header="{DynamicResource addtoqueue}" Command="{Binding MusicManager.Commands.AddTrackToQueue}" InputGestureText="Q"/>
                                        <MenuItem Header="{DynamicResource removefromqueue}" Command="{Binding MusicManager.Commands.RemoveFromQueue}" InputGestureText="Alt+Q"/>
                                        <MenuItem Header="{DynamicResource clearqueue}" Command="{Binding MusicManager.Commands.ClearQueue}" IsEnabled="{Binding MusicManager.Queue.HasTracks}"/>
                                        <Separator />
                                        <MenuItem Header="{DynamicResource queuemanager}" Command="{Binding OpenQueueManager}" InputGestureText="{DynamicResource ctrlq}"/>
                                    </MenuItem>
                                    <Separator />
                                    <MenuItem Header="{DynamicResource fileinfos}" Command="{Binding OpenTrackInformations}" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}" InputGestureText="F4"/>
                                    <MenuItem Header="{DynamicResource filelocation}" Command="{Binding MusicManager.Commands.OpenTrackLocation}" InputGestureText="Alt+O" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}"/>
                                    <Separator />
                                    <MenuItem Header="{DynamicResource remove}" Command="{Binding RemoveSelectedTrack}" InputGestureText="{DynamicResource del}"/>
                                </ContextMenu>
                            </ListView.Resources>
                            <ListView.InputBindings>
                                <KeyBinding Key="Delete" Command="{Binding RemoveSelectedTrack}"/>
                                <KeyBinding Key="Enter" Command="{Binding MusicManager.Commands.PlaySelectedTrack}"/>
                                <KeyBinding Key="O" Modifiers="Alt" Command="{Binding MusicManager.Commands.OpenTrackLocation}"/>
                                <KeyBinding Key="Space" Command="{Binding MusicManager.Commands.TogglePlayPause}"/>
                                <KeyBinding Key="Q" Command="{Binding MusicManager.Commands.AddTrackToQueue}"/>
                                <KeyBinding Key="Q" Modifiers="Alt" Command="{Binding MusicManager.Commands.RemoveFromQueue}"/>
                                <KeyBinding Key="Q" Modifiers="Control" Command="{Binding OpenQueueManager}"/>
                                <KeyBinding Key="Insert" Command="{Binding AddFilesToPlaylist}"/>
                                <KeyBinding Key="Insert" Modifiers="Control" Command="{Binding AddFolderToPlaylist}"/>
                                <KeyBinding Key="F4" Command="{Binding OpenTrackInformations}"/>
                            </ListView.InputBindings>
                            <ListView.Style>
                                <Style TargetType="{x:Type ListView}">
                                    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
                                    <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
                                </Style>
                            </ListView.Style>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem" BasedOn="{StaticResource MetroListViewItem}">
                                    <Style.Resources>
                                        <LinearGradientBrush x:Key="MouseOverBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                            <GradientStop Color="#22000000" Offset="0" />
                                            <GradientStop Color="#44000000" Offset="0.4" />
                                            <GradientStop Color="#55000000" Offset="0.6" />
                                            <GradientStop Color="#33000000" Offset="0.9" />
                                            <GradientStop Color="#22000000" Offset="1" />
                                        </LinearGradientBrush>
                                    </Style.Resources>
                                    <Setter Property="Padding" Value="0,4" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="Border.BorderThickness" Value="0,0,0,0.5" />
                                    <Setter Property="Border.BorderBrush" Value="LightGray" />
                                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                                    <Setter Property="LayoutTransform">
                                        <Setter.Value>
                                            <ScaleTransform x:Name="transform" />
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="jas:ListViewItemDragState.IsBeingDragged" Value="True">
                                            <Setter Property="FontWeight" Value="DemiBold" />
                                        </Trigger>
                                        <Trigger Property="jas:ListViewItemDragState.IsUnderDragCursor" Value="True">
                                            <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding TrackExists}" Value="False">
                                            <Setter Property="Background" Value="#FFF2F2F2"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="16"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.InputBindings>
                                            <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.MusicManager.Commands.PlaySelectedTrack}"/>
                                        </Grid.InputBindings>
                                        <Grid.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="False"/>
                                                            <Condition Binding="{Binding IsPlaying}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Foreground" Value="{DynamicResource DarkColorBrush}"/>
                                                    </MultiDataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Resources>
                                        <Grid VerticalAlignment="Center" Margin="5,0,0,0">
                                            <TextBlock Text="{Binding QueueID}" HorizontalAlignment="Center"/> <!--We dont have to hide it because it gets automatically null-->
                                            <Viewbox Width="12" Height="12" Child="{StaticResource VectorPlay}">
                                                <Viewbox.Resources>
                                                    <Style TargetType="Path">
                                                        <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                                <Setter Property="Fill" Value="White"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Viewbox.Resources>
                                                <Viewbox.Style>
                                                    <Style TargetType="Viewbox">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPlaying}" Value="True"/>
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.MusicManager.CSCoreEngine.IsPlaying}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                <MultiDataTrigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <ThicknessAnimation From="-5,0,5,0" To="0" Duration="0:0:0.4" Storyboard.TargetProperty="Margin"/>
                                                                            <DoubleAnimation From="0.5" To="1" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </MultiDataTrigger.EnterActions>
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Viewbox.Style>
                                            </Viewbox>
                                            <Viewbox Width="12" Height="12" Child="{StaticResource VectorPause}">
                                                <Viewbox.Resources>
                                                    <Style TargetType="Path">
                                                        <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                                                <Setter Property="Fill" Value="White"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Viewbox.Resources>
                                                <Viewbox.Style>
                                                    <Style TargetType="Viewbox">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPlaying}" Value="True"/>
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.MusicManager.CSCoreEngine.IsPlaying}" Value="False"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                <MultiDataTrigger.EnterActions>
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation From="0.8" To="1" Duration="0:0:0.3" Storyboard.TargetProperty="Opacity"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </MultiDataTrigger.EnterActions>
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Viewbox.Style>
                                            </Viewbox>
                                        </Grid>
                                        
                                        <TextBlock Text="{Binding}" Margin="10,0,0,0" VerticalAlignment="Center" Grid.Column="1"/>
                                        <TextBlock Text="{Binding Duration}" VerticalAlignment="Center" Grid.Column="2" Margin="0,0,10,0"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                    <Grid Grid.Column="3" Grid.Row="1" x:Name="girdcover" Visibility="{Binding MusicManager.CSCoreEngine.CurrentTrack,Converter={StaticResource CollapsedOnNullValue}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding MusicManager.Commands.JumpToPlayingTrack}"/>
                        </Grid.InputBindings>
                        <Rectangle Width="1" Fill="Gray"/>
                        <StackPanel Orientation="Vertical" Margin="5" Grid.Column="1">
                            <Border BorderThickness="0" Width="190" Height="190" Margin="10" Background="White" x:Name="mainpicture">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="4" ShadowDepth="0" Direction="0" Opacity="0.4" Color="#FFD1D1D1" />
                                </Border.Effect>
                                <Border Margin="3" Background="#FFFBFBFB">
                                    <Grid>
                                        <Grid>
                                            <Image Source="/Resources/GUI/music.png" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" RenderOptions.BitmapScalingMode="HighQuality"/>
                                        </Grid>
                                        <Image>
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.CurrentTrack.Image}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Hidden"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                            <Image.Source>
                                                <Binding Path="MusicManager.CSCoreEngine.CurrentTrack.Image" Converter="{StaticResource BitmapToBitmapImageConverter}">
                                                    <Binding.TargetNullValue>
                                                        <BitmapImage UriSource="/Resources/GUI/music.png" />
                                                    </Binding.TargetNullValue>
                                                </Binding>
                                            </Image.Source>
                                        </Image>
                                    </Grid>
                                </Border>
                            </Border>
                            <StackPanel Orientation="Vertical" Margin="10,10,0,0">
                                <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.Title}" Foreground="{DynamicResource NormalColorBrush}" TextWrapping="Wrap" x:Name="txt1"/>
                                <TextBlock FontSize="22" FontFamily="Segoe UI Light" Style="{StaticResource AristTextBlock}" x:Name="txt2" TextWrapping="Wrap"/>
                                <StackPanel Orientation="Horizontal" Margin="0,30,0,0" x:Name="stack1">
                                    <TextBlock Text="{DynamicResource bitrate}"/>
                                    <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.kbps}" Foreground="{DynamicResource NormalColorBrush}" Margin="5,0,0,0"/>
                                    <TextBlock Text=" kbps" Foreground="{DynamicResource NormalColorBrush}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,0" x:Name="stack2">
                                    <TextBlock Text="{DynamicResource samplerate}"/>
                                    <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.kHz}" Foreground="{DynamicResource NormalColorBrush}" Margin="5,0,0,0"/>
                                    <TextBlock Text=" kHz" Foreground="{DynamicResource NormalColorBrush}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,0" x:Name="stack3">
                                    <TextBlock Text="{DynamicResource format}"/>
                                    <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.Extension}" Foreground="{DynamicResource NormalColorBrush}" Margin="5,0,0,0"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="{DynamicResource nowplaying}">
                <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="500"/>
                    </Grid.ColumnDefinitions>
                    <Border BorderThickness="0" Width="280" Height="280" Background="White">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="6" ShadowDepth="2" Direction="0" Opacity="0.4" Color="#FFD1D1D1" />
                        </Border.Effect>
                        <Border Margin="3" Background="#FFFBFBFB">
                            <Grid>
                                <Grid>
                                    <Image Source="/Resources/GUI/music.png" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" RenderOptions.BitmapScalingMode="HighQuality"/>
                                </Grid>
                                <Image>
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.CurrentTrack.Image}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                    <Image.Source>
                                        <Binding Path="MusicManager.CSCoreEngine.CurrentTrack.Image" Converter="{StaticResource BitmapToBitmapImageConverter}">
                                            <Binding.TargetNullValue>
                                                <BitmapImage UriSource="/Resources/GUI/music.png" />
                                            </Binding.TargetNullValue>
                                        </Binding>
                                    </Image.Source>
                                </Image>
                            </Grid>
                        </Border>
                    </Border>
                    <Grid Grid.Column="2"  Margin="0,25,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrack.Title}" Foreground="{DynamicResource NormalColorBrush}" FontSize="14" x:Name="full1"/>
                            <TextBlock FontSize="32" Margin="0,10,0,0" FontFamily="Segoe UI Light" Style="{StaticResource AristTextBlock}" x:Name="full2"/>
                        </StackPanel>
                        <wpfsvl:SpectrumAnalyzer x:Name="spektrum1" Grid.Row="1" BarCount="50" Height="100" VerticalAlignment="Bottom" Focusable="False">
                            <wpfsvl:SpectrumAnalyzer.Style>
                                <Style TargetType="{x:Type wpfsvl:SpectrumAnalyzer}">
                                    <Setter Property="Opacity" Value="0"/>
                                    <Setter Property="BarStyle">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="LightGray"/>
                                                <Setter Property="StrokeDashArray" Value="4 4"/>
                                                <Setter Property="StrokeThickness" Value="1"/>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="PeakStyle">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="{DynamicResource SpectrumAnalyzerBrush}"/>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation To="0" BeginTime="0:0:1" Storyboard.TargetProperty="Opacity"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </wpfsvl:SpectrumAnalyzer.Style>
                        </wpfsvl:SpectrumAnalyzer>
                    </Grid>

                </Grid>
            </TabItem>
            <TabItem Header="{DynamicResource settings}" xmlns:settingsconverter="clr-namespace:Hurricane.Settings.Converter" xmlns:tkt="http://schemas.xceed.com/wpf/xaml/toolkit">
                <Grid DataContext="{x:Static viewmodels:SettingsViewModel.Instance}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.ColumnSpan="2">
                        <Button Content="{DynamicResource apply}" HorizontalAlignment="Right" Margin="0,0,10,0" Command="{Binding ApplyChanges}" IsEnabled="{Binding CanApply}"/>
                    </Grid>
                    <ListBox x:Name="lst" SelectedIndex="{Binding SelectedTab}" Grid.Row="1">
                        <ListBoxItem Content="{DynamicResource playback}"/>
                        <ListBoxItem Content="{DynamicResource appearance}"/>
                        <ListBoxItem Content="{DynamicResource behaviour}"/>
                        <ListBoxItem Content="{DynamicResource language}"/>
                        <ListBoxItem Content="{DynamicResource reset}"/>
                        <ListBoxItem Content="{DynamicResource registry}"/>
                        <ListBoxItem Content="{DynamicResource about}"/>
                    </ListBox>
                    <TabControl Grid.Column="1" Grid.Row="1" SelectedIndex="{Binding SelectedTab}">
                        <TabControl.Resources>
                            <Style TargetType="TabItem">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Style>
                        </TabControl.Resources>
                        <TabItem Header="Playback">
                            <TabItem.Resources>
                                <settingsconverter:BitrateToIndexConverter x:Key="BitrateToIndexConverter"/>
                                <settingsconverter:SampleRateToIndexConverter x:Key="SampleRateToIndexConverter"/>
                            </TabItem.Resources>
                            <Grid>
                                <StackPanel Orientation="Vertical" Margin="10">
                                    <DockPanel>
                                        <TextBlock Text="{DynamicResource device}" VerticalAlignment="Center"/>
                                        <TextBlock Text=":" VerticalAlignment="Center"/>
                                        <ComboBox Margin="10,0,0,0" ItemsSource="{Binding AudioDevices}" SelectedItem="{Binding SelectedAudioDevice}" Width="300" HorizontalAlignment="Left">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid x:Name="grid">
                                                        <TextBlock Text="{Binding}" x:Name="txt"/>
                                                    </Grid>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                                            <Setter TargetName="txt" Property="Foreground" Value="#FFC15757"/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </DockPanel>
                                    <DockPanel Margin="0,10,0,0" LastChildFill="False">
                                        <TextBlock Text="{DynamicResource samplesourcebits}" VerticalAlignment="Center"/>
                                        <TextBlock Text=":" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                        <ComboBox Width="100" SelectedIndex="{Binding Config.WaveSourceBits,Converter={StaticResource BitrateToIndexConverter}}" SelectionChanged="SettingChanged">
                                            <ComboBoxItem Content="8 Bits"/>
                                            <ComboBoxItem Content="16 Bits"/>
                                            <ComboBoxItem Content="24 Bits"/>
                                            <ComboBoxItem Content="32 Bits"/>
                                        </ComboBox>
                                    </DockPanel>
                                    <DockPanel Margin="0,10,0,0" LastChildFill="False">
                                        <TextBlock Text="{DynamicResource samplerate}" VerticalAlignment="Center"/>
                                        <TextBlock Text=":" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                        <ComboBox Width="250" SelectedIndex="{Binding Config.SampleRate,Converter={StaticResource SampleRateToIndexConverter}}" SelectionChanged="SettingChanged">
                                            <ComboBoxItem Content="{DynamicResource defaultsamplerate}"/>
                                            <ComboBoxItem Content="44100 Hz"/>
                                            <ComboBoxItem Content="48000 Hz"/>
                                            <ComboBoxItem Content="88200 Hz"/>
                                            <ComboBoxItem Content="96000 Hz"/>
                                            <ComboBoxItem Content="176400 Hz"/>
                                            <ComboBoxItem Content="192000 Hz"/>
                                        </ComboBox>
                                    </DockPanel>
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Visual">
                            <StackPanel Orientation="Vertical" Margin="10">
                                <TextBlock Text="{DynamicResource themeupper}" Style="{StaticResource TextBlockHeader}"/>
                                <ComboBox Margin="0,10,0,0" ItemsSource="{Binding Config.Theme.Themes}" SelectedItem="{Binding Config.Theme.SelectedColorTheme}" SelectionChanged="SettingChanged" Width="300" HorizontalAlignment="Left">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel>
                                                <Ellipse Width="16" Height="16" Fill="{Binding ColorBrush}"/>
                                                <TextBlock Text="{Binding TranslatedName}" Margin="10,0,0,0"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <DockPanel Margin="0,5,0,0" >
                                    <CheckBox Content="{DynamicResource SpectrumAnalyzerColor}" VerticalAlignment="Center" IsChecked="{Binding Config.Theme.UseCustomSpectrumAnalyzerColor}" Checked="SettingChanged" Unchecked="SettingChanged"/>
                                    <tkt:ColorPicker Margin="10,0,0,0" IsEnabled="{Binding Config.Theme.UseCustomSpectrumAnalyzerColor}" SelectedColor="{Binding Config.Theme.SpectrumAnalyzerColor}" SelectedColorChanged="SettingChanged" Width="200" HorizontalAlignment="Left"/>
                                </DockPanel>
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="Behaviour">
                            <StackPanel Orientation="Vertical" Margin="10">
                                <TextBlock Text="MAGIC ARROW" Style="{StaticResource TextBlockHeader}"/>
                                <CheckBox Content="{DynamicResource showmagicarrowbelowcursor}" IsChecked="{Binding Config.ShowMagicArrowBelowCursor}" Margin="0,10,0,0" Checked="SettingChanged" Unchecked="SettingChanged"/>
                                <TextBlock Text="{DynamicResource notificationsupper}" Margin="0,30,0,0" Style="{StaticResource TextBlockHeader}"/>
                                <Grid Margin="0,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="125"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.Resources>
                                        <settingsconverter:NotificationTypeConverter x:Key="NotificationTypeConverter"/>
                                    </Grid.Resources>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{DynamicResource trackinformations}" VerticalAlignment="Center"/>
                                        <TextBlock Text=":" Margin="0,0,10,0" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Grid.Column="1">
                                        <ComboBox Width="150" SelectedIndex="{Binding Config.Notification,Converter={StaticResource NotificationTypeConverter}}" SelectionChanged="SettingChanged">
                                            <ComboBoxItem Content="{DynamicResource disabled}"/>
                                            <ComboBoxItem Content="{DynamicResource top}"/>
                                            <ComboBoxItem Content="{DynamicResource rightbottom}"/>
                                        </ComboBox>
                                        <Button Content="{DynamicResource test}" Margin="5,0,0,0" Width="70" Command="{Binding TestNotification}"/>
                                    </StackPanel>
                                </Grid>
                                <Grid Margin="0,10,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="125"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource showtime}" VerticalAlignment="Center"/>
                                    <controls:NumericUpDown Interval="100" Width="125" Grid.Column="1" HorizontalAlignment="Left" Value="{Binding Config.NotificationShowTime}" ValueChanged="SettingChanged" StringFormat="{}{0} ms"/>
                                </Grid>
                                <CheckBox IsChecked="{Binding Config.DisableNotificationInGame}" Margin="0,10,0,0" Checked="SettingChanged" Unchecked="SettingChanged">
                                    <TextBlock Text="{DynamicResource disablenotificationsingame}" TextWrapping="Wrap"/>
                                </CheckBox>
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="Language">
                            <ListBox ItemsSource="{Binding Config.Languages}" SelectedItem="{Binding CurrentLanguage}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="4">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Image Source="{Binding Icon}" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            <StackPanel Orientation="Vertical" Grid.Column="1" Margin="10,5,0,5">
                                                <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="14"/>
                                                <TextBlock Text="{Binding Translator}"/>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </TabItem>
                        <TabItem Header="Reset">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{DynamicResource importtrackupper}" Style="{StaticResource TextBlockHeader}"/>
                                <Button Margin="0,10,0,0" Content="{DynamicResource reset}" HorizontalAlignment="Left" Width="200" IsEnabled="{Binding Config.RememberTrackImportPlaylist}" Command="{Binding ResetTrackImport}"/>
                                <TextBlock Text="HURRICANE" Style="{StaticResource TextBlockHeader}" Margin="0,30,0,0"/>
                                <Button Margin="0,10,0,0" Content="{DynamicResource totalreset}" Foreground="#FFCF0606" Command="{Binding TotalReset}" HorizontalAlignment="Left" Width="200"/>
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="Registry">
                            <ScrollViewer>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Style="{StaticResource TextBlockHeader}" Text="{DynamicResource contextmenuitemforextensionsupper}"/>
                                    <ItemsControl ItemsSource="{Binding RegistryManager.ContextMenuItems}" Margin="0,10,0,0">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <controls:ToggleSwitchButton IsChecked="{Binding IsRegistered}"/>
                                                    <TextBlock Text="{Binding Extension}" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="About">
                            <views:AboutView />
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Slider Maximum="{Binding MusicManager.CSCoreEngine.TrackLength}" Value="{Binding MusicManager.CSCoreEngine.Position}" Style="{StaticResource AdvancedTimelineSlider}" IsMoveToPointEnabled="True"/>
            <Grid Grid.Row="1">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,5,0,10">
                    <ToggleButton Height="30" Width="30" Background="White" Style="{StaticResource RoundToggleButton}" Margin="0,0,8,0" IsChecked="{Binding MusicManager.RandomTrack}">
                        <Grid>
                            <Viewbox Width="12" Height="12" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid>
                                    <Path Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=Foreground}" Data="F1 M 9.042,2.000 L 12.000,2.000 L 12.000,0.000 L 16.000,3.000 L 12.000,6.000 L 12.000,4.000 L 10.042,4.000 L 4.001,12.000 L 0.000,12.000 L 0.000,10.000 L 3.001,10.000 L 9.042,2.000 Z M 4.384,5.845 L 3.000,4.000 L 0.000,4.000 L 0.000,2.000 L 4.000,2.000 L 5.638,4.184 L 4.384,5.845 Z M 9.000,12.000 L 7.384,9.845 L 8.638,8.184 L 10.000,10.000 L 12.000,10.000 L 12.000,8.000 L 16.000,11.000 L 12.000,14.000 L 12.000,12.000 L 9.000,12.000 Z"/>
                                </Grid>
                            </Viewbox>
                        </Grid>
                    </ToggleButton>
                    <Button Style="{StaticResource RoundButton}" Height="30" Width="30" Background="White" Command="{Binding MusicManager.Commands.GoBackward}">
                        <Grid>
                            <Viewbox Width="12" Height="12" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,1,0" Child="{StaticResource VectorFastBackward}"/>
                        </Grid>
                    </Button>
                    <Button Style="{StaticResource RoundButton}" Width="45" Height="45" Command="{Binding MusicManager.Commands.TogglePlayPause}" Margin="8,0,8,0">
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Viewbox Width="16" Height="16" Stretch="Uniform" Margin="3,0,0,0" Child="{StaticResource VectorPlay}">
                                <Viewbox.Resources>
                                    <Style TargetType="{x:Type Viewbox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="Black"/>
                                    </Style>
                                </Viewbox.Resources>
                            </Viewbox>
                            <Viewbox Width="13" Height="15" Stretch="Fill" Child="{StaticResource VectorPause}">
                                <Viewbox.Resources>
                                    <Style TargetType="{x:Type Viewbox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="False">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="Black"/>
                                    </Style>
                                </Viewbox.Resources>
                            </Viewbox>
                        </Grid>
                    </Button>
                    <Button Style="{StaticResource RoundButton}" Height="30" Width="30" Background="White" Command="{Binding MusicManager.Commands.GoForward}" Focusable="False">
                        <Grid>
                            <Viewbox Width="12" Height="12" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1,0,0,0" Child="{StaticResource VectorFastForward}"/>
                        </Grid>
                    </Button>
                    <ToggleButton Height="30" Width="30" Background="White" Style="{StaticResource RoundToggleButton}" Margin="8,0,0,0" IsChecked="{Binding MusicManager.RepeatTrack}">
                        <Grid>
                            <Viewbox Width="12" Height="12" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Path Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=Foreground}" Data="F1 M 25.797,17.087 C 26.181,15.857 26.404,14.556 26.404,13.202 C 26.404,5.923 20.481,0.000 13.202,0.000 C 5.923,0.000 0.000,5.922 0.000,13.202 C 0.000,20.482 5.923,26.406 13.202,26.406 L 13.202,22.168 C 8.259,22.168 4.237,18.147 4.237,13.203 C 4.237,8.260 8.258,4.239 13.202,4.239 C 18.144,4.239 22.167,8.260 22.167,13.203 C 22.167,13.881 22.079,14.536 21.935,15.170 L 17.972,13.202 L 20.732,21.402 L 28.930,18.640 L 25.797,17.087 Z"/>
                            </Viewbox>
                        </Grid>
                    </ToggleButton>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="20,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrackPosition,Converter={StaticResource FormatTimespan}}"/>
                    <TextBlock Text="/" Margin="10,0,10,0"/>
                    <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrackLength,Converter={StaticResource FormatTimespan}}"/>
                </StackPanel>
                <DockPanel HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,20,0">
                    <DockPanel.Resources>
                        <converter:VolumeToImage x:Key="VolumeToImage"/>
                    </DockPanel.Resources>
                    <Image Source="{Binding ElementName=volumeslider,Path=Value,Converter={StaticResource VolumeToImage}}" Width="24" Height="24"/>
                    <Slider x:Name="volumeslider" Maximum="1" Minimum="0" IsMoveToPointEnabled="True" Style="{StaticResource AdvancedTimelineSlider}" VerticalAlignment="Center" LargeChange="0.1" Value="{Binding MusicManager.CSCoreEngine.Volume}"/>
                </DockPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
