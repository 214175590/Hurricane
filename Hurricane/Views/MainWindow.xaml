<controls:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:metro="http://schemas.codeplex.com/elysium" 
        xmlns:params="http://schemas.codeplex.com/elysium/params" x:Class="Hurricane.MainWindow" 
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:converter="clr-namespace:Hurricane.Extensions.Converter"
        xmlns:ex="clr-namespace:Hurricane.Extensions"
        xmlns:wpfsvl="clr-namespace:WPFSoundVisualizationLib;assembly=WPFSoundVisualizationLib"
        xmlns:viewmodels="clr-namespace:Hurricane.ViewModels"
        xmlns:jas="clr-namespace:Hurricane.Resources.Styles.DragDropListView.ServiceProviders.UI"
        DataContext="{x:Static viewmodels:MainViewModel.Instance}"
        Title="Hurricane" Width="300" MinWidth="300" MaxWidth="300" MinHeight="400" Height="1000" SizeToContent="Manual" x:Name="window" Icon="/Resources/App/icon.ico"
        ex:WindowCustomizer.CanMaximize="False" ex:WindowCustomizer.CanMinimize="False" ShowTitleBar="False" ShowSystemMenuOnRightClick="False" ShowMinButton="False" ShowMaxRestoreButton="False" ShowIconOnTitleBar="False" ShowCloseButton="False" IsWindowDraggable="False" GlowBrush="{DynamicResource AccentColorBrush}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/TimelineSlider.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/VolumeSlider.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/MetroWindowStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Space" Command="{Binding MusicManager.CSCoreEngine.TogglePlayPauseCommand}"/>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DockPanel LastChildFill="True">
            <Border x:Name="PART_TITLEBAR" 
                                            Margin="0,0,0,0" Height="40" DockPanel.Dock="Top"  
                                            Background="Transparent" MouseLeftButtonDown="PART_TITLEBAR_MouseLeftButtonDown" MouseLeftButtonUp="PART_TITLEBAR_MouseLeftButtonUp">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <Button Width="28" Height="28" Focusable="False" Margin="5,2,0,0" Command="{Binding OpenSettings}" Background="White">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid Background="White">
                                                    <Path x:Name="img" Stretch="UniformToFill" Stroke="Black" Width="20" Height="20" Data="M31.229,17.736c0.064-0.571,0.104-1.148,0.104-1.736s-0.04-1.166-0.104-1.737l-4.377-1.557c-0.218-0.716-0.504-1.401-0.851-2.05l1.993-4.192c-0.725-0.91-1.549-1.734-2.458-2.459l-4.193,1.994c-0.647-0.347-1.334-0.632-2.049-0.849l-1.558-4.378C17.165,0.708,16.588,0.667,16,0.667s-1.166,0.041-1.737,0.105L12.707,5.15c-0.716,0.217-1.401,0.502-2.05,0.849L6.464,4.005C5.554,4.73,4.73,5.554,4.005,6.464l1.994,4.192c-0.347,0.648-0.632,1.334-0.849,2.05l-4.378,1.557C0.708,14.834,0.667,15.412,0.667,16s0.041,1.165,0.105,1.736l4.378,1.558c0.217,0.715,0.502,1.401,0.849,2.049l-1.994,4.193c0.725,0.909,1.549,1.733,2.459,2.458l4.192-1.993c0.648,0.347,1.334,0.633,2.05,0.851l1.557,4.377c0.571,0.064,1.148,0.104,1.737,0.104c0.588,0,1.165-0.04,1.736-0.104l1.558-4.377c0.715-0.218,1.399-0.504,2.049-0.851l4.193,1.993c0.909-0.725,1.733-1.549,2.458-2.458l-1.993-4.193c0.347-0.647,0.633-1.334,0.851-2.049L31.229,17.736zM16,20.871c-2.69,0-4.872-2.182-4.872-4.871c0-2.69,2.182-4.872,4.872-4.872c2.689,0,4.871,2.182,4.871,4.872C20.871,18.689,18.689,20.871,16,20.871z"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="img" Property="Stroke" Value="#5a6778"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="img" Property="Stroke" Value="#8394a9"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                    <TextBlock Margin="10,10,0,10" VerticalAlignment="Center" 
                                                       Foreground="#FFAAAAAA" TextWrapping="NoWrap" 
                                                       Text="Hurricane" FontSize="16" HorizontalAlignment="Center" Grid.ColumnSpan="2"/>
                    <Button x:Name="PART_CLOSE" Grid.Column="1"
                                                    VerticalAlignment="Center" Margin="5,0,10,0"
                                                    Height="20" Width="20" 
                                                    Style="{StaticResource WindowButtonStyle}"
                                                    Click="PART_CLOSE_Click">
                    </Button>
                </Grid>
            </Border>
        </DockPanel>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <converter:CollapsedOnNullValue x:Key="CollapsedOnNullValue"/>
            </Grid.Resources>
            <Grid>
                <Button Background="{DynamicResource NormalColorBrush}" Height="30" Visibility="{Binding Updater.UpdateFound,Converter={StaticResource BooleanToVisibilityConverter}}" ex:VisibilityAnimation.AnimationType="Fade" Command="{Binding OpenUpdater}">
                    <Button.Resources>
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                    </Button.Resources>

                    <TextBlock Text="{DynamicResource newupdateavailable}" Foreground="White"/>
                </Button>
            </Grid>
            <DockPanel Grid.Row="1" Margin="5,5,0,0" Visibility="{Binding MusicManager.CSCoreEngine.CurrentTrack,Converter={StaticResource CollapsedOnNullValue}}">
                <Polygon Points="0,0 8,5, 0,10"
          Stroke="{DynamicResource AccentColorBrush}" StrokeThickness="2" VerticalAlignment="Center" Margin="0,2,0,0"/>
                <TextBlock Text="{Binding MusicManager.CSCoreEngine.CurrentTrack}" Margin="5,0,5,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis">
                    <TextBlock.InputBindings>
                        <MouseBinding Command="{Binding MusicManager.JumpToPlayingTrack}" MouseAction="LeftClick"/>
                    </TextBlock.InputBindings>
                </TextBlock>
            </DockPanel>
            <StackPanel Grid.Row="2" Margin="5">
                <Grid Margin="0,0,0,10">
                    <wpfsvl:SpectrumAnalyzer x:Name="SpectrumAnalyzer" BarCount="32">
                        <wpfsvl:SpectrumAnalyzer.Style>
                            <Style TargetType="{x:Type wpfsvl:SpectrumAnalyzer}">
                                <Setter Property="BarStyle">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="Fill" Value="{DynamicResource SpectrumAnalyzerBrush}"/>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="PeakStyle">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="Fill" Value="{DynamicResource SpectrumAnalyzerBrush}"/>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </wpfsvl:SpectrumAnalyzer.Style>
                    </wpfsvl:SpectrumAnalyzer>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center" Grid.Column="1">
                        <Button Style="{DynamicResource MetroCircleButtonStyle}" Height="45" Width="45" Background="White" Command="{Binding MusicManager.GoBackwardCommand}" Focusable="False">
                            <Grid>
                                <Viewbox Child="{StaticResource VectorFastBackward}" Width="20" Height="20" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-1,0,1,0"/>
                            </Grid>
                        </Button>
                        <Button Style="{DynamicResource MetroCircleButtonStyle}" Height="60" Width="60" Command="{Binding MusicManager.CSCoreEngine.TogglePlayPauseCommand}" Background="White" Focusable="False">
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Viewbox Width="26" Height="26" Child="{StaticResource VectorPlay}" Stretch="Uniform" Margin="5,0,0,0">
                                    <Viewbox.Resources>
                                        <Style TargetType="{x:Type Viewbox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="True">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Viewbox.Resources>
                                </Viewbox>
                                <Viewbox Width="26" Height="26" Child="{StaticResource VectorPause}" Stretch="Uniform">
                                    <Viewbox.Resources>
                                        <Style TargetType="{x:Type Viewbox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Viewbox.Resources>
                                </Viewbox>
                            </Grid>
                        </Button>
                        <Button Style="{DynamicResource MetroCircleButtonStyle}" Height="45" Width="45" Background="White" Command="{Binding MusicManager.GoForwardCommand}" Focusable="False">
                            <Grid>
                                <Viewbox Child="{StaticResource VectorFastForward}" Width="20" Height="20" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1,0,-1,0"/>
                            </Grid>
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Column="1" Margin="20,0,0,0">
                        <DockPanel.Resources>
                            <converter:VolumeToImage x:Key="VolumeToImage"/>
                        </DockPanel.Resources>
                        <Image Source="{Binding ElementName=volumeslider,Path=Value,Converter={StaticResource VolumeToImage}}" Width="24" Height="24"/>
                        <Slider x:Name="volumeslider" Maximum="1" Minimum="0" IsMoveToPointEnabled="True" Style="{StaticResource VolumeSlider}" VerticalAlignment="Center" LargeChange="0.1" Value="{Binding MusicManager.CSCoreEngine.Volume}"/>
                    </DockPanel>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </StackPanel.Resources>
                        <Button Width="24" Height="24" Focusable="False" Command="{Binding OpenEqualizer}">
                            <!-- <Viewbox Width="14" Height="14" Stretch="Fill" Child="{StaticResource VectorEqualizer}" RenderOptions.BitmapScalingMode="HighQuality"/> looks like trash-->
                            <Image Width="14" Height="14" Source="/Resources/MediaIcons/Advanced/Options/equalizer.png"/>
                        </Button>
                        <ToggleButton Width="24" Height="24" Focusable="False" Margin="5,0,0,0" x:Name="tbtn_random" IsChecked="{Binding MusicManager.RandomTrack}">
                            <ToggleButton.Resources>
                                <Style TargetType="Path">
                                    <Setter Property="Fill" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MusicManager.RandomTrack}" Value="True">
                                            <Setter Property="Fill" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Resources>
                            <Viewbox Child="{StaticResource VectorRandom}"/>
                        </ToggleButton>
                        <ToggleButton Width="24" Height="24" Focusable="False" Margin="5,0,0,0" x:Name="tbtn_repeat" IsChecked="{Binding MusicManager.RepeatTrack}">
                            <ToggleButton.Resources>
                                <Style TargetType="Path">
                                    <Setter Property="Fill" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MusicManager.RepeatTrack}" Value="True">
                                            <Setter Property="Fill" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Resources>
                            <Viewbox Child="{StaticResource VectorRepeat}" Stretch="UniformToFill"/>
                        </ToggleButton>
                    </StackPanel>
                </Grid>
                <Slider VerticalAlignment="Bottom" IsMoveToPointEnabled="True" Margin="0,2,0,-2" Style="{StaticResource TimelineSlider}" Maximum="{Binding MusicManager.CSCoreEngine.TrackLength}" Value="{Binding MusicManager.CSCoreEngine.Position}"/>
            </StackPanel>
            <Grid Grid.Row="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="5,0,5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox ItemsSource="{Binding MusicManager.Playlists}" DisplayMemberPath="Name" SelectedItem="{Binding MusicManager.SelectedPlaylist}" VerticalAlignment="Center" Margin="0,0,3,0" Height="27"/>
                    <Button Grid.Column="1" Width="27" Height="27" x:Name="buttonplus" Click="buttonplus_Click" Focusable="False">
                        <Button.ContextMenu>
                            <ContextMenu x:Name="contextmenuplus">
                                <MenuItem Header="{DynamicResource newplaylist}" Command="{Binding AddNewPlaylist}">
                                    <MenuItem.Icon>
                                        <Viewbox Stretch="Uniform" Child="{StaticResource VectorAdd}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="{DynamicResource addfiles}" Command="{Binding AddFilesToPlaylist}">
                                    <MenuItem.Icon>
                                        <Viewbox Stretch="Uniform" Height="16" Width="16" Child="{StaticResource VectorAddFile}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource adddirectories}" Command="{Binding AddFolderToPlaylist}">
                                    <MenuItem.Icon>
                                        <Viewbox Stretch="Uniform" Height="16" Width="16" Child="{StaticResource VectorAddFolder}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="{DynamicResource renameplaylist}" Command="{Binding RenamePlaylist}">
                                    <MenuItem.Icon>
                                        <Image Source="/Resources/GUI/rename.png" Width="16" Height="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource removeplaylist}" Command="{Binding RemovePlaylist}">
                                    <MenuItem.Icon>
                                        <Viewbox Stretch="Uniform" Height="16" Width="13" Child="{StaticResource VectorDelete}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="{DynamicResource reloadtrackinfo}" Command="{Binding ReloadTrackInformations}">
                                    <MenuItem.Icon>
                                        <Viewbox Stretch="Uniform" Height="16" Width="13" Child="{StaticResource VectorRefresh}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource removetracks}">
                                    <MenuItem.Icon>
                                        <Viewbox Stretch="Uniform" Child="{StaticResource VectorRemove}"/>
                                    </MenuItem.Icon>
                                    <MenuItem Header="{DynamicResource removemissingtracks}" Command="{Binding RemoveMissingTracks}" IsEnabled="{Binding MusicManager.SelectedPlaylist.ContainsMissingTracks}"/>
                                    <MenuItem Header="{DynamicResource removeduplicates}" Command="{Binding RemoveDuplicateTracks}"/>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                        <Button.Content>
                            <Viewbox Stretch="Uniform" Child="{StaticResource VectorPlus}"/>
                        </Button.Content>
                    </Button>
                </Grid>
                <ListView SelectionMode="Extended" Grid.Row="1" ItemsSource="{Binding MusicManager.SelectedPlaylist.ViewSource}" Drop="ListView_Drop" DragEnter="ListView_DragEnter" x:Name="listview" SelectedItem="{Binding MusicManager.SelectedTrack}" ScrollViewer.VerticalScrollBarVisibility="Visible" Margin="0,5,0,0" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionChanged="listview_SelectionChanged" IsSynchronizedWithCurrentItem="True">
                    <ListView.Style>
                        <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource MetroListView}">
                            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
                            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
                        </Style>
                    </ListView.Style>
                    <ListView.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding RemoveSelectedTracks}"/>
                        <KeyBinding Key="Enter" Command="{Binding MusicManager.PlaySelectedTrack}"/>
                        <KeyBinding Key="O" Modifiers="Alt" Command="{Binding MusicManager.OpenFileLocation}"/>
                        <KeyBinding Key="Space" Command="{Binding MusicManager.CSCoreEngine.TogglePlayPauseCommand}"/>
                    </ListView.InputBindings>
                    <ListView.Resources>
                        <converter:TrueFalseValueConverter x:Key="boldifplaying" FalseValue="Normal" TrueValue="Bold"/>
                        <ContextMenu x:Key="ItemContextMenu" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext}">
                            <MenuItem Header="{DynamicResource play}" Command="{Binding MusicManager.PlaySelectedTrack}" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}">
                                <MenuItem.Icon>
                                    <Viewbox Stretch="Uniform" Width="16" Height="16">
                                        <Path Fill="#ff000000" Data="F1 M 309.200,168.900 L 30.800,3.200 C 27.400,1.200 23.900,0.000 19.900,0.000 C 9.000,0.000 0.100,9.000 0.100,20.000 L 0.000,20.000 L 0.000,364.000 L 0.100,364.000 C 0.100,375.000 9.000,384.000 19.900,384.000 C 24.000,384.000 27.400,382.600 31.100,380.600 L 309.200,215.100 C 315.800,209.600 320.000,201.300 320.000,192.000 C 320.000,182.700 315.800,174.500 309.200,168.900 Z"/>
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{DynamicResource addtracks}">
                                <MenuItem Header="{DynamicResource addfiles}" Command="{Binding AddFilesToPlaylist}">
                                    <MenuItem.Icon>
                                        <Viewbox Stretch="Uniform" Height="16" Width="16">
                                            <Path Fill="#ff000000" Data="F1 M 5.000,5.000 L 5.000,7.000 L 3.000,7.000 L 3.000,9.000 L 5.000,9.000 L 5.000,11.000 L 7.000,11.000 L 7.000,9.000 L 9.000,9.000 L 9.000,7.000 L 7.000,7.000 L 7.000,5.000 L 5.000,5.000 L 5.000,5.000 Z M 9.016,0.012 L 12.059,4.028 L 9.016,4.028 L 9.016,0.012 L 9.016,0.012 Z M 0.000,0.000 L 8.000,0.000 L 8.000,5.000 L 12.000,5.000 L 12.000,15.000 L 8.000,15.000 L 0.000,15.000 L 0.000,0.000 L 0.000,0.000 Z"/>
                                        </Viewbox>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource adddirectories}" Command="{Binding AddFolderToPlaylist}">
                                    <MenuItem.Icon>
                                        <Viewbox Stretch="Uniform" Height="16" Width="16">
                                            <Path Fill="#ff000000" Data="F1 M 3.000,0.000 L 7.000,0.000 L 8.000,1.000 L 2.000,1.000 L 3.000,0.000 Z M 7.000,4.000 L 7.000,6.000 L 5.000,6.000 L 5.000,8.000 L 7.000,8.000 L 7.000,10.000 L 9.000,10.000 L 9.000,8.000 L 11.000,8.000 L 11.000,6.000 L 9.000,6.000 L 9.000,4.000 L 7.000,4.000 Z M 0.000,3.000 C 0.000,2.500 0.500,2.000 1.000,2.000 L 15.000,2.000 C 15.500,2.000 16.000,2.500 16.000,3.000 L 16.000,11.000 C 16.000,11.500 15.500,12.000 15.000,12.000 L 1.000,12.000 C 0.500,12.000 0.000,11.500 0.000,11.000 L 0.000,3.000 Z"/>
                                        </Viewbox>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{DynamicResource fileinfos}" Command="{Binding OpenTrackInformations}" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}">
                                <MenuItem.Icon>
                                    <Viewbox Width="16" Height="16" Stretch="Uniform" Child="{StaticResource VectorInfo}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource filelocation}" Command="{Binding MusicManager.OpenFileLocation}" InputGestureText="Alt + O" IsEnabled="{Binding MusicManager.SelectedTrack.TrackExists}">
                                <MenuItem.Icon>
                                    <Viewbox Stretch="Uniform" Width="16" Height="16">
                                        <Grid>
                                            <Path Fill="#ff000000" Data="F1 M 366.073,96.030 L 17.873,96.030 C 0.173,96.030 -0.727,105.230 0.273,116.530 L 13.273,299.530 C 14.173,310.730 16.773,320.030 34.373,320.030 L 350.573,320.030 C 368.573,320.030 370.673,310.830 371.673,299.530 L 383.773,114.230 C 384.673,103.030 383.773,96.030 366.073,96.030 Z"/>
                                            <Path Fill="#ff000000" Data="F1 M 362.173,47.330 C 361.673,34.930 357.673,32.030 347.073,32.030 C 347.073,32.030 225.673,32.030 203.873,32.030 C 182.073,32.030 179.473,32.330 162.973,14.630 C 149.273,-0.170 154.673,0.030 126.373,0.030 C 103.773,0.030 51.073,0.030 51.073,0.030 C 33.673,0.030 27.473,-1.470 25.873,16.630 C 24.373,33.330 20.873,73.830 20.373,80.030 L 363.773,80.030 L 362.173,47.330 Z"/>
                                        </Grid>
                                    </Viewbox>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{DynamicResource remove}" Command="{Binding RemoveSelectedTracks}" InputGestureText="{DynamicResource del}">
                                <MenuItem.Icon>
                                    <Path Height="16" Width="16" Fill="#ff000000" Data="F1 M 4.000,7.000 L 4.000,9.000 L 12.000,9.000 L 12.000,7.000 L 4.000,7.000 Z M 8.000,16.000 C 3.582,16.000 0.000,12.418 0.000,8.000 C 0.000,3.582 3.582,0.000 8.000,0.000 C 12.418,0.000 16.000,3.582 16.000,8.000 C 16.000,12.418 12.418,16.000 8.000,16.000 Z"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource MetroListViewItem}">
                            <Style.Resources>
                                <LinearGradientBrush x:Key="MouseOverBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                    <GradientStop Color="#22000000" Offset="0" />
                                    <GradientStop Color="#44000000" Offset="0.4" />
                                    <GradientStop Color="#55000000" Offset="0.6" />
                                    <GradientStop Color="#33000000" Offset="0.9" />
                                    <GradientStop Color="#22000000" Offset="1" />
                                </LinearGradientBrush>
                            </Style.Resources>
                            <Setter Property="Padding" Value="0,4" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Border.BorderThickness" Value="0,0,0,0.5" />
                            <Setter Property="Border.BorderBrush" Value="LightGray" />
                            <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                            <Setter Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform x:Name="transform" />
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="jas:ListViewItemDragState.IsBeingDragged" Value="True">
                                    <Setter Property="FontWeight" Value="DemiBold" />
                                </Trigger>
                                <Trigger Property="jas:ListViewItemDragState.IsUnderDragCursor" Value="True">
                                    <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
                                </Trigger>
                                <EventTrigger RoutedEvent="Loaded">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="20,0,-20,0" To="0,0,0,0" Duration="0:0:.3"/>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.5" To="1" Duration="0:0:.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <DataTrigger Binding="{Binding TrackExists}" Value="False">
                                    <Setter Property="Background" Value="#FFF2F2F2"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Background="#01FFFFFF" Margin="4">
                                <Grid.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.MusicManager.PlaySelectedTrack}"/>
                                </Grid.InputBindings>
                                <Grid.Resources>
                                    <converter:TrueFalseValueConverter TrueValue="2" FalseValue="0" x:Key="TrueFalseValueConverter"/>
                                </Grid.Resources>
                                <Border BorderBrush="{DynamicResource LightColorBrush}" BorderThickness="{Binding IsPlaying,Converter={StaticResource TrueFalseValueConverter}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-4">
                                    <StackPanel Orientation="Vertical" Margin="3">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="50"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" FontWeight="{Binding IsPlaying,Converter={StaticResource boldifplaying}}"/>
                                            <TextBlock Text="{Binding Duration}" TextAlignment="Right" Grid.Column="1" x:Name="txt2" FontWeight="{Binding IsPlaying,Converter={StaticResource boldifplaying}}"/>
                                        </Grid>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="FontSize" Value="10"/>
                                                    <Setter Property="FontWeight" Value="{Binding IsPlaying,Converter={StaticResource boldifplaying}}"/>
                                                </Style>
                                            </StackPanel.Resources>
                                            <TextBlock Text="{Binding Extension}"/>
                                            <TextBlock Text=" :: "/>
                                            <TextBlock Text="{Binding kHz}"/>
                                            <TextBlock Text=" kHz"/>
                                            <TextBlock Text=" :: "/>
                                            <TextBlock Text="{Binding kbps}"/>
                                            <TextBlock Text=" kbps"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackPanel Orientation="Vertical" Grid.Row="2" Margin="5,0,5,5">
                    <TextBox controls:TextBoxHelper.Watermark="{StaticResource search}" Text="{Binding MusicManager.SearchText,UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</controls:MetroWindow>
