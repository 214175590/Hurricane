<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:metro="http://schemas.codeplex.com/elysium" 
        xmlns:params="http://schemas.codeplex.com/elysium/params" x:Class="Hurricane.MainWindow" 
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:converter="clr-namespace:Hurricane.Extensions.Converter"
        xmlns:wpfsvl="clr-namespace:WPFSoundVisualizationLib;assembly=WPFSoundVisualizationLib"
        xmlns:viewmodels="clr-namespace:Hurricane.ViewModels"
        xmlns:jas="clr-namespace:Hurricane.Resources.Styles.DragDropListView.ServiceProviders.UI"
        DataContext="{x:Static viewmodels:MainViewModel.Instance}"
        Title="Hurricane" Width="300" MinWidth="300" MaxWidth="300" MinHeight="400" Height="1000" SizeToContent="Manual" x:Name="window" Style="{DynamicResource MetroWindowStyle}" Icon="/Resources/App/icon.ico">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/TimelineSlider.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/VolumeSlider.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/MetroWindowStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="MetroWindowStyle" TargetType="{x:Type Window}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Grid>
                                <Border x:Name="MainBorder" BorderThickness="0" Background="White" >
                                    <DockPanel LastChildFill="True">
                                        <Border x:Name="PART_TITLEBAR" 
                                            Margin="0,0,0,0" Height="40" DockPanel.Dock="Top"  
                                            Background="Transparent" MouseLeftButtonDown="PART_TITLEBAR_MouseLeftButtonDown">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Orientation="Horizontal">
                                                    <Button Width="25" Height="25" Focusable="False" Margin="5,2,0,0" Command="{Binding OpenSettings}">
                                                        <Image Source="/Resources/GUI/settings.png"/>
                                                    </Button>
                                                </StackPanel>
                                                <TextBlock Margin="10,10,0,10" VerticalAlignment="Center" 
                                                       Foreground="#FFAAAAAA" TextWrapping="NoWrap" 
                                                       Text="Hurricane" FontSize="16" HorizontalAlignment="Center"/>
                                                <Button x:Name="PART_CLOSE" Grid.Column="1"
                                                    VerticalAlignment="Center" Margin="5"
                                                    Height="20" Width="20" 
                                                    Style="{DynamicResource WindowButtonStyle}"
                                                    Click="PART_CLOSE_Click">
                                                </Button>
                                            </Grid>
                                        </Border>

                                        <AdornerDecorator DockPanel.Dock="Bottom">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                        </AdornerDecorator>
                                    </DockPanel>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Margin="5">
            <Grid Margin="0,0,0,10">
                <wpfsvl:SpectrumAnalyzer x:Name="SpectrumAnalyzer" BarCount="32"/>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center" Grid.Column="1">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <Button Style="{DynamicResource MetroCircleButtonStyle}" Height="45" Width="45" Background="White" Command="{Binding MusicEngine.GoBackwardCommand}">
                        <Grid>
                            <Image Source="/Resources/MediaIcons/Essentials/back.png" Width="24" Height="24" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-1,0,1,0"/>
                        </Grid>
                    </Button>
                    <Button Style="{DynamicResource MetroCircleButtonStyle}" Height="60" Width="60" Command="{Binding MusicEngine.CSCoreEngine.TogglePlayPauseCommand}" Background="White">
                        <Button.Resources>
                            <converter:ToggleImageConverter TrueImagePath="/Resources/MediaIcons/Essentials/pause.png" FalseImagePath="/Resources/MediaIcons/Essentials/play.png" x:Key="ToggleImageConverter"/>
                        </Button.Resources>
                        <Grid>
                            <Image Source="{Binding MusicEngine.CSCoreEngine.IsPlaying,Converter={StaticResource ToggleImageConverter}}" Width="32" Height="32" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Grid>
                    </Button>
                    <Button Style="{DynamicResource MetroCircleButtonStyle}" Height="45" Width="45" Background="White" Command="{Binding MusicEngine.GoForwardCommand}">
                        <Grid>
                            <Image Source="/Resources/MediaIcons/Essentials/forward.png" Width="24" Height="24" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1,0,-1,0"/>
                        </Grid>
                    </Button>
                </StackPanel>
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DockPanel Grid.Column="1" Margin="20,0,0,0">
                    <DockPanel.Resources>
                        <converter:VolumeToImage x:Key="VolumeToImage"/>
                    </DockPanel.Resources>
                    <Image Source="{Binding ElementName=volumeslider,Path=Value,Converter={StaticResource VolumeToImage}}" Width="24" Height="24"/>
                    <Slider x:Name="volumeslider" Maximum="1" Minimum="0" IsMoveToPointEnabled="True" Style="{StaticResource VolumeSlider}" VerticalAlignment="Center" LargeChange="0.1" Value="{Binding MusicEngine.CSCoreEngine.Volume}"/>
                </DockPanel>
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <Button Width="24" Height="24" Focusable="False" Command="{Binding OpenEqualizer}">
                        <Image Width="14" Height="14" Source="/Resources/MediaIcons/Advanced/Options/equalizer.png"/>
                    </Button>
                    <ToggleButton Width="24" Height="24" Focusable="False" Margin="5,0,0,0" x:Name="tbtn_random" IsChecked="{Binding MusicEngine.RandomTrack}">
                        <ToggleButton.Resources>
                            <converter:ToggleImageConverter x:Key="ToggleImageConverter" TrueImagePath="/Resources/MediaIcons/Advanced/Options/random_white.png" FalseImagePath="/Resources/MediaIcons/Advanced/Options/random.png"/>
                        </ToggleButton.Resources>
                        <Image Width="14" Height="14" Source="{Binding ElementName=tbtn_random,Path=IsChecked,Converter={StaticResource ToggleImageConverter}}"/>
                    </ToggleButton>
                    <ToggleButton Width="24" Height="24" Focusable="False" Margin="5,0,0,0" x:Name="tbtn_repeat" IsChecked="{Binding MusicEngine.RepeatTrack}">
                        <ToggleButton.Resources>
                            <converter:ToggleImageConverter x:Key="ToggleImageConverter" TrueImagePath="/Resources/MediaIcons/Advanced/Options/repeat_white.png" FalseImagePath="/Resources/MediaIcons/Advanced/Options/repeat.png"/>
                        </ToggleButton.Resources>
                        <Image Width="14" Height="14" Source="{Binding ElementName=tbtn_repeat,Path=IsChecked,Converter={StaticResource ToggleImageConverter}}"/>
                    </ToggleButton>
                </StackPanel>
            </Grid>
            <Slider VerticalAlignment="Bottom" IsMoveToPointEnabled="True" Margin="0,5,0,0" Style="{StaticResource TimelineSlider}" Maximum="{Binding MusicEngine.CSCoreEngine.TrackLength}" Value="{Binding MusicEngine.CSCoreEngine.Position}"/>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="5,0,5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <ComboBox ItemsSource="{Binding MusicEngine.Playlists}" DisplayMemberPath="Name" SelectedItem="{Binding MusicEngine.SelectedPlaylist}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                <Menu Grid.Column="1" VerticalAlignment="Center">
                    <MenuItem>
                        <MenuItem.HeaderTemplate>
                            <DataTemplate>
                                <Image Source="/Resources/GUI/Plus.png" Width="16" Height="16" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </MenuItem.HeaderTemplate>
                        <MenuItem Header="{DynamicResource newplaylist}" Command="{Binding AddNewPlaylist}"/>
                        <Separator />
                        <MenuItem Header="{DynamicResource addfiles}" Command="{Binding AddFilesToPlaylist}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/GUI/addfile.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource adddirectories}" Command="{Binding AddFolderToPlaylist}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/GUI/addfolder.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="{DynamicResource renameplaylist}" Command="{Binding RenamePlaylist}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/GUI/rename.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource removeplaylist}" Command="{Binding RemovePlaylist}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/GUI/delete.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>
            </Grid>

            <ListView SelectionMode="Extended" Grid.Row="1" ItemsSource="{Binding MusicEngine.SelectedPlaylist.ViewSource}" Drop="ListView_Drop" DragEnter="ListView_DragEnter" x:Name="listview" SelectedItem="{Binding MusicEngine.SelectedTrack}" ScrollViewer.VerticalScrollBarVisibility="Visible" Margin="0,5,0,0" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListView.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding RemoveSelectedTracks}"/>
                    <KeyBinding Key="Enter" Command="{Binding MusicEngine.PlaySelectedTrack}"/>
                    <KeyBinding Key="O" Modifiers="Alt" Command="{Binding MusicEngine.OpenFileLocation}"/>
                </ListView.InputBindings>
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext}">
                        <MenuItem Header="{DynamicResource play}" Command="{Binding MusicEngine.PlaySelectedTrack}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/MediaIcons/Essentials/Play.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="{DynamicResource addtracks}">
                            <MenuItem Header="{DynamicResource addfiles}" Command="{Binding AddFilesToPlaylist}">
                                <MenuItem.Icon>
                                    <Image Source="/Resources/GUI/addfile.png" Width="16" Height="16"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource adddirectories}" Command="{Binding AddFolderToPlaylist}">
                                <MenuItem.Icon>
                                    <Image Source="/Resources/GUI/addfolder.png" Width="16" Height="16"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="{DynamicResource fileinfos}" Command="{Binding OpenTrackInformations}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/GUI/info.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource filelocation}" Command="{Binding MusicEngine.OpenFileLocation}" InputGestureText="Alt + O">
                            <MenuItem.Icon>
                                <Image Source="/Resources/GUI/folder.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="{DynamicResource remove}" Command="{Binding RemoveSelectedTracks}" InputGestureText="{DynamicResource del}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/GUI/delete.png" Width="13" Height="16" Stretch="UniformToFill" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem" BasedOn="{StaticResource MetroListViewItem}">
                        <Style.Resources>
                            <LinearGradientBrush x:Key="MouseOverBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                <GradientStop Color="#22000000" Offset="0" />
                                <GradientStop Color="#44000000" Offset="0.4" />
                                <GradientStop Color="#55000000" Offset="0.6" />
                                <GradientStop Color="#33000000" Offset="0.9" />
                                <GradientStop Color="#22000000" Offset="1" />
                            </LinearGradientBrush>
                        </Style.Resources>
                        <Setter Property="Padding" Value="0,4" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Border.BorderThickness" Value="0,0,0,0.5" />
                        <Setter Property="Border.BorderBrush" Value="LightGray" />
                        <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <ScaleTransform x:Name="transform" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="jas:ListViewItemDragState.IsBeingDragged" Value="True">
                                <Setter Property="FontWeight" Value="DemiBold" />
                            </Trigger>
                            <Trigger Property="jas:ListViewItemDragState.IsUnderDragCursor" Value="True">
                                <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
                            </Trigger>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="20,0,-20,0" To="0,0,0,0" Duration="0:0:.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.5" To="1" Duration="0:0:.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Background="#01FFFFFF" Margin="4">
                            <Grid.InputBindings>
                                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.MusicEngine.PlaySelectedTrack}"/>
                            </Grid.InputBindings>
                            <Grid.Resources>
                                <converter:TrueFalseValueConverter TrueValue="2" FalseValue="0" x:Key="TrueFalseValueConverter"/>
                            </Grid.Resources>
                            <Border BorderBrush="LightBlue" BorderThickness="{Binding IsPlaying,Converter={StaticResource TrueFalseValueConverter}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-4">
                                <StackPanel Orientation="Vertical" Margin="3">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="50"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
                                        <TextBlock Text="{Binding Duration}" TextAlignment="Right" Grid.Column="1"/>
                                    </Grid>
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="FontSize" Value="10"/>
                                            </Style>
                                        </StackPanel.Resources>
                                        <TextBlock Text="{Binding Extension}"/>
                                        <TextBlock Text=" :: "/>
                                        <TextBlock Text="{Binding kHz}"/>
                                        <TextBlock Text=" kHz"/>
                                        <TextBlock Text=" :: "/>
                                        <TextBlock Text="{Binding kbps}"/>
                                        <TextBlock Text=" kbps"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <StackPanel Orientation="Vertical" Grid.Row="2" Margin="5,0,5,5">
                <TextBox controls:TextboxHelper.Watermark="{StaticResource search}" Text="{Binding MusicEngine.SearchText,UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
