<UserControl x:Class="Hurricane.WindowSkinNormal.Views.PlaylistView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behavior="clr-namespace:Hurricane.Behavior"
             xmlns:controls="clr-namespace:Hurricane.Controls"
             xmlns:controls1="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:musicData="clr-namespace:Hurricane.Model.Music.Playable;assembly=Hurricane.Model"
             xmlns:viewData="clr-namespace:Hurricane.ViewModel.MainView;assembly=Hurricane.ViewModel"
             d:DataContext="{d:DesignInstance viewData:PlaylistView}"
             d:DesignHeight="400"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="75" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Margin="10" Orientation="Horizontal">
                <Viewbox Height="20">
                    <Path Data="{StaticResource VectorPlaylist}" Fill="{StaticResource GrayBrush2}" />
                </Viewbox>
                <TextBlock Margin="10,0,0,0"
                           VerticalAlignment="Center"
                           FontSize="20"
                           Text="{Binding Text}"
                           TextTrimming="CharacterEllipsis" />
            </StackPanel>
            <StackPanel Grid.Column="1"
                        Margin="10"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                <TextBox Width="200"
                         Text="{Binding SearchText,
                                        UpdateSourceTrigger=PropertyChanged}"
                         controls1:TextBoxHelper.Watermark="{StaticResource Search}" />
                <Menu Width="20"
                      Height="20"
                      Margin="10,0,0,0"
                      Padding="0">
                    <controls:VectorMenuItem HorizontalAlignment="Left"
                                             Background="{StaticResource WhiteBrush}"
                                             Style="{StaticResource VectorMenuStyle}"
                                             VectorGraphic="{StaticResource VectorMore}">
                        <MenuItem Command="{Binding AddFilesCommand}" Header="{StaticResource AddFiles}" />
                        <MenuItem Command="{Binding AddDirectoryCommand}" Header="{StaticResource AddDirectory}" />
                    </controls:VectorMenuItem>
                </Menu>
            </StackPanel>
        </Grid>
        <ListBox x:Name="TrackListBox"
                 Grid.Row="1"
                 Margin="5,0,5,0"
                 ItemsSource="{Binding ViewSource}"
                 SelectionMode="Extended"
                 Style="{StaticResource VirtualisedMetroListBox}">
            <ListBox.InputBindings>
                <KeyBinding Key="Q"
                            Command="{Binding AddToQueueCommand}"
                            CommandParameter="{Binding ElementName=TrackListBox,
                                                       Path=SelectedItems}" />
            </ListBox.InputBindings>
            <ListBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource MetroListBoxItem}" TargetType="ListBoxItem">
                    <Setter Property="behavior:ControlBehavior.DoubleClickCommand" Value="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=DataContext.PlayAudioCommand}" />
                    <Setter Property="behavior:ControlBehavior.DoubleClickCommandParameter" Value="{Binding}" />
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type musicData:PlayableBase}">
                    <Border>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsPlaying}" Value="true" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid Margin="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Vertical">
                                <TextBlock FontSize="13" Text="{Binding Title}" />
                                <Button Margin="0,2,0,0"
                                        HorizontalAlignment="Left"
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox},
                                                          Path=DataContext.OpenArtistCommand}"
                                        CommandParameter="{Binding Artist}"
                                        Content="{Binding Artist.Name}">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Cursor" Value="Hand" />
                                            <Setter Property="OverridesDefaultStyle" Value="True" />
                                            <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <TextBlock FontSize="11">
                                                            <ContentPresenter />
                                                        </TextBlock>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}" Value="true">
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                            <TextBlock Grid.Column="1"
                                       Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       Text="{Binding Duration,
                                                      Converter={StaticResource TimespanToStringConverter}}" />
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</UserControl>
